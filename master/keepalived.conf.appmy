#这里是全局定义部分
global_defs {
   #notification_email {
   # admin@laiwojia.la   #设置报警邮件地址 每行一个 可以设置多个
   # boss@laiwojia.la
   # cto@laiwojia.la
   #}
   #notification_email_from server@laiwojia.la #邮件的发送地址
   #smtp_server 192.168.138.10 #smtp 地址
   #smtp_connect_timeout 30 #连接smtp服务器超时的实际
   router_id LVS_DEVEL
}

#vrrp 实例定义部分
vrrp_instance VI_1 {
    state MASTER  #keepalived 的角色 MASTER 表示主机是主服务器 BACKUP表示是以备用服务器
    interface eth0 #指定监测的网络网卡
    lvs_sync_daemon_inteface eth0
    virtual_router_id 51 #虚拟路由标示
    priority 100 #定义优先级 数字越大 优先级越高 MASTER的优先级必须大于BACKUP的优先级
    advert_int 1 #设定主备之间检查时间 单位s
    authentication {  #设定验证类型和密码
        auth_type PASS
        auth_pass 1111
    }
    virtual_ipaddress { #设定虚拟IP地址 可以设置多个 每行一个
        192.168.138.200
    }
}

#vrrp 实例定义部分
vrrp_instance VI_2 {
    state MASTER  #keepalived 的角色 MASTER 表示主机是主服务器 BACKUP表示是以备用服务器
    interface eth0 #指定监测的网络网卡
    lvs_sync_daemon_inteface eth0
    virtual_router_id 52 #虚拟路由标示
    priority 100 #定义优先级 数字越大 优先级越高 MASTER的优先级必须大于BACKUP的优先级
    advert_int 1 #设定主备之间检查时间 单位s
	nopreempt 
    authentication {  #设定验证类型和密码
        auth_type PASS
        auth_pass 2222
    }
    virtual_ipaddress { #设定虚拟IP地址 可以设置多个 每行一个
        192.168.33.6
    }
}

#虚拟服务器部分
virtual_server 192.168.138.200 80 {
    delay_loop 6 #设定运行情况检查时间 单位s
    lb_algo rr #负载调度算法 rr即轮叫算法
    lb_kind DR #设置LVS负载机制 NAT TUN DR 三种模式可选
    nat_mask 255.255.255.0
    persistence_timeout 0  #会话保持时间
                            #有了这个会话保持功能 用户的请求会被一直分发到某个服务节点
                            #如果用户在动态页面50s内没有任何动作，那么后面就会被分发到其他节点
                            #如果用户一直有动作，不受50s限制

    protocol TCP  #协议

    #real server部分
    real_server 192.168.1.110 80 {
        weight 1  #服务节点权值，数字越大，权值越高
                  #权值的大小可以为不同性能的服务器分配不同的负载
                  #这样才能有效合理的利用服务器资源
        TCP_CHECK {  #状态检查部分    
          connect_timeout 3 #3s无响应超时                                                     
          nb_get_retry 3  #重试次数
          delay_before_retry 3   #重试间隔
          connect_port 80 #连接端口                                                    
        }  
    }

    #real server部分
    real_server 192.168.1.111 80 {
        weight 1  #服务节点权值，数字越大，权值越高
                  #权值的大小可以为不同性能的服务器分配不同的负载
                  #这样才能有效合理的利用服务器资源
        TCP_CHECK {  #状态检查部分    
          connect_timeout 3 #3s无响应超时                                                     
          nb_get_retry 3  #重试次数
          delay_before_retry 3   #重试间隔
          connect_port 80 #连接端口                                                    
        }  
    }
}

#mysql虚拟ip
virtual_server 192.168.33.6 3306 {#修改为对应的VIP
        delay_loop 6
        lb_algo rr #lvs负载均衡算法
        lb_kind DR #lvs的转发模式
        #nat_mask 255.255.255.0
        #persistence_timeout 50
        protocol TCP

        real_server 192.168.1.110 3306 {#修改为对应的realserever
                weight 2
                TCP_CHECK {
                connect_timeout 3
                nb_get_retry 3
                delay_before_retry 3
                connect_port 3306
                }
        }

        real_server 192.168.1.111 3306 {#修改为对应的realserver
                    weight 2
                    TCP_CHECK {
                    connect_timeout 3
                    nb_get_retry 3
                    delay_before_retry 3
                    connect_port 3306
                    }
        }

}
